{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = void 0;\nconst plugins = [];\nconst interactorsInitializers = new Map();\nconst updatersInitializers = new Map();\nconst interactors = new Map();\nconst updaters = new Map();\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\n\nclass Plugins {\n  static getPlugin(plugin) {\n    return plugins.find(t => t.id === plugin);\n  }\n\n  static addPlugin(plugin) {\n    if (!Plugins.getPlugin(plugin.id)) {\n      plugins.push(plugin);\n    }\n  }\n\n  static getAvailablePlugins(container) {\n    const res = new Map();\n\n    for (const plugin of plugins) {\n      if (!plugin.needsPlugin(container.actualOptions)) {\n        continue;\n      }\n\n      res.set(plugin.id, plugin.getPlugin(container));\n    }\n\n    return res;\n  }\n\n  static loadOptions(options, sourceOptions) {\n    for (const plugin of plugins) {\n      plugin.loadOptions(options, sourceOptions);\n    }\n  }\n\n  static getPreset(preset) {\n    return presets.get(preset);\n  }\n\n  static addPreset(presetKey, options) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (override || !Plugins.getPreset(presetKey)) {\n      presets.set(presetKey, options);\n    }\n  }\n\n  static addShapeDrawer(type, drawer) {\n    if (!Plugins.getShapeDrawer(type)) {\n      drawers.set(type, drawer);\n    }\n  }\n\n  static getShapeDrawer(type) {\n    return drawers.get(type);\n  }\n\n  static getSupportedShapes() {\n    return drawers.keys();\n  }\n\n  static getPathGenerator(type) {\n    return pathGenerators.get(type);\n  }\n\n  static addPathGenerator(type, pathGenerator) {\n    if (!Plugins.getPathGenerator(type)) {\n      pathGenerators.set(type, pathGenerator);\n    }\n  }\n\n  static getInteractors(container) {\n    let res = interactors.get(container);\n\n    if (!res) {\n      res = [...interactorsInitializers.values()].map(t => t(container));\n      interactors.set(container, res);\n    }\n\n    return res;\n  }\n\n  static addInteractor(name, initInteractor) {\n    interactorsInitializers.set(name, initInteractor);\n  }\n\n  static getUpdaters(container) {\n    let res = updaters.get(container);\n\n    if (!res) {\n      res = [...updatersInitializers.values()].map(t => t(container));\n      updaters.set(container, res);\n    }\n\n    return res;\n  }\n\n  static addParticleUpdater(name, initUpdater) {\n    updatersInitializers.set(name, initUpdater);\n  }\n\n}\n\nexports.Plugins = Plugins;","map":{"version":3,"names":["Object","defineProperty","exports","value","Plugins","plugins","interactorsInitializers","Map","updatersInitializers","interactors","updaters","presets","drawers","pathGenerators","getPlugin","plugin","find","t","id","addPlugin","push","getAvailablePlugins","container","res","needsPlugin","actualOptions","set","loadOptions","options","sourceOptions","getPreset","preset","get","addPreset","presetKey","override","addShapeDrawer","type","drawer","getShapeDrawer","getSupportedShapes","keys","getPathGenerator","addPathGenerator","pathGenerator","getInteractors","values","map","addInteractor","name","initInteractor","getUpdaters","addParticleUpdater","initUpdater"],"sources":["/Users/yujunyan/Desktop/my-website-master/node_modules/tsparticles/Utils/Plugins.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugins = void 0;\nconst plugins = [];\nconst interactorsInitializers = new Map();\nconst updatersInitializers = new Map();\nconst interactors = new Map();\nconst updaters = new Map();\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n    static getPlugin(plugin) {\n        return plugins.find((t) => t.id === plugin);\n    }\n    static addPlugin(plugin) {\n        if (!Plugins.getPlugin(plugin.id)) {\n            plugins.push(plugin);\n        }\n    }\n    static getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    static loadOptions(options, sourceOptions) {\n        for (const plugin of plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    static getPreset(preset) {\n        return presets.get(preset);\n    }\n    static addPreset(presetKey, options, override = false) {\n        if (override || !Plugins.getPreset(presetKey)) {\n            presets.set(presetKey, options);\n        }\n    }\n    static addShapeDrawer(type, drawer) {\n        if (!Plugins.getShapeDrawer(type)) {\n            drawers.set(type, drawer);\n        }\n    }\n    static getShapeDrawer(type) {\n        return drawers.get(type);\n    }\n    static getSupportedShapes() {\n        return drawers.keys();\n    }\n    static getPathGenerator(type) {\n        return pathGenerators.get(type);\n    }\n    static addPathGenerator(type, pathGenerator) {\n        if (!Plugins.getPathGenerator(type)) {\n            pathGenerators.set(type, pathGenerator);\n        }\n    }\n    static getInteractors(container) {\n        let res = interactors.get(container);\n        if (!res) {\n            res = [...interactorsInitializers.values()].map((t) => t(container));\n            interactors.set(container, res);\n        }\n        return res;\n    }\n    static addInteractor(name, initInteractor) {\n        interactorsInitializers.set(name, initInteractor);\n    }\n    static getUpdaters(container) {\n        let res = updaters.get(container);\n        if (!res) {\n            res = [...updatersInitializers.values()].map((t) => t(container));\n            updaters.set(container, res);\n        }\n        return res;\n    }\n    static addParticleUpdater(name, initUpdater) {\n        updatersInitializers.set(name, initUpdater);\n    }\n}\nexports.Plugins = Plugins;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}