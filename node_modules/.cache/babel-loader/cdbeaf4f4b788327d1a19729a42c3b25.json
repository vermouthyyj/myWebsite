{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmitterInstance = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n\nfunction randomCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nfunction randomPosition(position, offset) {\n  return {\n    x: randomCoordinate(position.x, offset.x),\n    y: randomCoordinate(position.y, offset.y)\n  };\n}\n\nclass EmitterInstance {\n  constructor(emitters, container, emitterOptions, position) {\n    var _a, _b, _c, _d, _e, _f;\n\n    var _g;\n\n    this.emitters = emitters;\n    this.container = container;\n    this.firstSpawn = true;\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n    this.emitterOptions = Utils_1.deepExtend({}, emitterOptions);\n    this.spawnDelay = ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = emitterOptions.name;\n    let particlesOptions = Utils_1.deepExtend({}, this.emitterOptions.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : particlesOptions.move = {};\n    (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : _g.direction = this.emitterOptions.direction;\n\n    if (this.emitterOptions.spawnColor !== undefined) {\n      this.spawnColor = Utils_1.colorToHsl(this.emitterOptions.spawnColor);\n    }\n\n    this.paused = !this.emitterOptions.autoPlay;\n    this.particlesOptions = particlesOptions;\n    this.size = (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\n      const size = new EmitterSize_1.EmitterSize();\n      size.load({\n        height: 0,\n        mode: Enums_1.SizeMode.percent,\n        width: 0\n      });\n      return size;\n    })();\n    this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  externalPlay() {\n    this.paused = false;\n    this.play();\n  }\n\n  externalPause() {\n    this.paused = true;\n    this.pause();\n  }\n\n  play() {\n    if (this.paused) {\n      return;\n    }\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n      if (this.emitDelay === undefined) {\n        const delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\n        this.emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n      }\n\n      if (this.lifeCount > 0 || this.immortal) {\n        this.prepareToDie();\n      }\n    }\n  }\n\n  pause() {\n    if (this.paused) {\n      return;\n    }\n\n    delete this.emitDelay;\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  update(delta) {\n    var _a, _b, _c;\n\n    if (this.paused) {\n      return;\n    }\n\n    if (this.firstSpawn) {\n      this.firstSpawn = false;\n      this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n      this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n      delta.value = 0;\n    }\n\n    if (this.duration !== undefined) {\n      this.currentDuration += delta.value;\n\n      if (this.currentDuration >= this.duration) {\n        this.pause();\n\n        if (this.spawnDelay !== undefined) {\n          delete this.spawnDelay;\n        }\n\n        if (!this.immortal) {\n          this.lifeCount--;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.position = this.calcPosition();\n          this.spawnDelay = ((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n\n        this.currentDuration -= this.duration;\n        delete this.duration;\n      }\n    }\n\n    if (this.spawnDelay !== undefined) {\n      this.currentSpawnDelay += delta.value;\n\n      if (this.currentSpawnDelay >= this.spawnDelay) {\n        this.play();\n        this.currentSpawnDelay -= this.currentSpawnDelay;\n        delete this.spawnDelay;\n      }\n    }\n\n    if (this.emitDelay !== undefined) {\n      this.currentEmitDelay += delta.value;\n\n      if (this.currentEmitDelay >= this.emitDelay) {\n        this.emit();\n        this.currentEmitDelay -= this.emitDelay;\n      }\n    }\n  }\n\n  prepareToDie() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n      this.duration = duration * 1000;\n    }\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.emitterOptions.position;\n    return {\n      x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n      y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n    };\n  }\n\n  emit() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    const container = this.container;\n    const position = this.position;\n    const offset = {\n      x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n    const quantity = Utils_1.getRangeValue(this.emitterOptions.rate.quantity);\n\n    for (let i = 0; i < quantity; i++) {\n      const particlesOptions = Utils_1.deepExtend({}, this.particlesOptions);\n\n      if (this.spawnColor !== undefined) {\n        const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n        if (colorAnimation) {\n          const hueAnimation = colorAnimation;\n\n          if (hueAnimation.enable) {\n            this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n          } else {\n            const hslAnimation = colorAnimation;\n            this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n            this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n            this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n          }\n        }\n\n        if (!particlesOptions.color) {\n          particlesOptions.color = {\n            value: this.spawnColor\n          };\n        } else {\n          particlesOptions.color.value = this.spawnColor;\n        }\n      }\n\n      container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n    }\n  }\n\n  setColorAnimation(animation, initValue, maxValue) {\n    var _a;\n\n    const container = this.container;\n\n    if (!animation.enable) {\n      return initValue;\n    }\n\n    const colorOffset = Utils_1.randomInRange(animation.offset);\n    const delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\n    const emitFactor = 1000 * delay / container.retina.reduceFactor;\n    const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n    return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n  }\n\n}\n\nexports.EmitterInstance = EmitterInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","EmitterInstance","Utils_1","require","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","constructor","emitters","container","emitterOptions","_a","_b","_c","_d","_e","_f","_g","firstSpawn","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","deepExtend","spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","particlesOptions","particles","move","direction","spawnColor","undefined","colorToHsl","paused","autoPlay","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","count","immortal","play","externalPlay","externalPause","pause","emitDelay","getRangeValue","rate","prepareToDie","resize","isPointInside","canvas","update","delta","duration","destroy","emit","removeEmitter","percentPosition","quantity","i","colorAnimation","animation","hueAnimation","enable","h","setColorAnimation","hslAnimation","s","l","color","addParticle","initValue","maxValue","colorOffset","randomInRange","emitFactor","colorSpeed","speed","fpsLimit"],"sources":["/Users/yujunyan/Desktop/untitled folder/portfolio-template/node_modules/tsparticles/Plugins/Emitters/EmitterInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n    return {\n        x: randomCoordinate(position.x, offset.x),\n        y: randomCoordinate(position.y, offset.y),\n    };\n}\nclass EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c, _d, _e, _f;\n        var _g;\n        this.emitters = emitters;\n        this.container = container;\n        this.firstSpawn = true;\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        this.emitterOptions = Utils_1.deepExtend({}, emitterOptions);\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = emitterOptions.name;\n        let particlesOptions = Utils_1.deepExtend({}, this.emitterOptions.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : (particlesOptions.move = {});\n        (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : (_g.direction = this.emitterOptions.direction);\n        if (this.emitterOptions.spawnColor !== undefined) {\n            this.spawnColor = Utils_1.colorToHsl(this.emitterOptions.spawnColor);\n        }\n        this.paused = !this.emitterOptions.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n            if (this.emitDelay === undefined) {\n                const delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\n                this.emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (this.firstSpawn) {\n            this.firstSpawn = false;\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n            delta.value = 0;\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay =\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        const quantity = Utils_1.getRangeValue(this.emitterOptions.rate.quantity);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = Utils_1.deepExtend({}, this.particlesOptions);\n            if (this.spawnColor !== undefined) {\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (colorAnimation) {\n                    const hueAnimation = colorAnimation;\n                    if (hueAnimation.enable) {\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n                    }\n                    else {\n                        const hslAnimation = colorAnimation;\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = Utils_1.randomInRange(animation.offset);\n        const delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\n        const emitFactor = (1000 * delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\nexports.EmitterInstance = EmitterInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}