{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Utils_2 = require(\"../Utils\");\n\nconst Enums_1 = require(\"../Enums\");\n\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n\n  loadCanvas(canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  destroy() {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.draw(ctx => {\n      Utils_2.clear(ctx, this.size);\n    });\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        Utils_2.clear(ctx, this.size);\n        this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        Utils_2.clear(ctx, this.size);\n      });\n    }\n  }\n\n  windowResize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container;\n    this.resize();\n    container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n    container.particles.setDensity();\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n\n  resize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n\n  drawConnectLine(p1, p2) {\n    this.draw(ctx => {\n      var _a;\n\n      const lineStyle = this.lineStyle(p1, p2);\n\n      if (!lineStyle) {\n        return;\n      }\n\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    });\n  }\n\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    const container = this.container;\n    this.draw(ctx => {\n      var _a;\n\n      const beginPos = particle.getPosition();\n      Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n  }\n\n  drawParticle(particle, delta) {\n    var _a, _b, _c;\n\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor();\n    const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n    if (!pfColor && !psColor) {\n      return;\n    }\n\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n\n    if (!fColor || !sColor) {\n      const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n\n      if (!fColor) {\n        fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n      }\n\n      if (!sColor) {\n        sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n      }\n    }\n\n    const options = this.container.actualOptions;\n    const zIndexOptions = particle.options.zIndex;\n    const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n    const strokeOpacity = (_c = particle.stroke.opacity) !== null && _c !== void 0 ? _c : opacity;\n    const zOpacity = opacity * zOpacityFactor;\n    const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n\n    if (!fillColorValue && !sColor) {\n      return;\n    }\n\n    const orbitOptions = particle.options.orbit;\n    this.draw(ctx => {\n      const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n      const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n\n      if (radius <= 0) {\n        return;\n      }\n\n      if (orbitOptions.enable) {\n        this.drawOrbit(particle, Enums_1.OrbitType.back);\n      }\n\n      Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n\n      if (orbitOptions.enable) {\n        this.drawOrbit(particle, Enums_1.OrbitType.front);\n      }\n    });\n  }\n\n  drawOrbit(particle, type) {\n    const container = this.container;\n    const orbitOptions = particle.options.orbit;\n    let start;\n    let end;\n\n    if (type === Enums_1.OrbitType.back) {\n      start = Math.PI / 2;\n      end = Math.PI * 3 / 2;\n    } else if (type === Enums_1.OrbitType.front) {\n      start = Math.PI * 3 / 2;\n      end = Math.PI / 2;\n    } else {\n      start = 0;\n      end = 2 * Math.PI;\n    }\n\n    this.draw(ctx => {\n      var _a, _b, _c, _d;\n\n      Utils_1.drawEllipse(ctx, particle, (_a = particle.orbitColor) !== null && _a !== void 0 ? _a : particle.getFillColor(), (_c = (_b = particle.orbitRadius) !== null && _b !== void 0 ? _b : container.retina.orbitRadius) !== null && _c !== void 0 ? _c : particle.getRadius(), orbitOptions.opacity, orbitOptions.width, ((_d = particle.orbitRotation) !== null && _d !== void 0 ? _d : 0) * container.retina.pixelRatio, start, end);\n    });\n  }\n\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      Utils_1.drawPlugin(ctx, plugin, delta);\n    });\n  }\n\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      Utils_1.drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = Utils_1.colorToRgb(background.color);\n      elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n  draw(cb) {\n    if (!this.context) {\n      return;\n    }\n\n    return cb(this.context);\n  }\n\n  initCover() {\n    const options = this.container.actualOptions;\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const coverRgb = Utils_1.colorToRgb(color);\n\n    if (coverRgb) {\n      this.coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n    }\n  }\n\n  initTrail() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    const fillColor = Utils_1.colorToRgb(trail.fillColor);\n\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n\n  getPluginParticleColors(particle) {\n    let fColor;\n    let sColor;\n\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n      }\n\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n      }\n\n      if (fColor && sColor) {\n        break;\n      }\n    }\n\n    return [fColor, sColor];\n  }\n\n  initStyle() {\n    const element = this.element,\n          options = this.container.actualOptions;\n\n    if (!element) {\n      return;\n    }\n\n    const originalStyle = this.originalStyle;\n\n    if (options.fullScreen.enable) {\n      this.originalStyle = Utils_1.deepExtend({}, element.style);\n      element.style.position = \"fixed\";\n      element.style.zIndex = options.fullScreen.zIndex.toString(10);\n      element.style.top = \"0\";\n      element.style.left = \"0\";\n      element.style.width = \"100%\";\n      element.style.height = \"100%\";\n    } else if (originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      Utils_1.paintBase(ctx, this.size, baseColor);\n    });\n  }\n\n  lineStyle(p1, p2) {\n    return this.draw(ctx => {\n      const options = this.container.actualOptions;\n      const connectOptions = options.interactivity.modes.connect;\n      return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n    });\n  }\n\n}\n\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","Utils_2","Enums_1","constructor","container","size","height","width","context","generatedCanvas","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","destroy","draw","ctx","clear","options","actualOptions","backgroundMask","enable","cover","coverColor","paintBase","getStyleFromRgb","a","trail","particles","move","length","trailFillColor","windowResize","setResponsive","pixelRatio","setDensity","plugin","plugins","undefined","pxRatio","oldSize","started","resizeFactor","drawConnectLine","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","opacity","mousePos","beginPos","drawParticle","delta","_b","_c","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","pOptions","twinkle","twinkling","Math","random","frequency","twinkleRgb","colorToHsl","color","zIndexOptions","zIndex","zOpacityFactor","opacityRate","zIndexFactor","radius","getRadius","bubble","strokeOpacity","stroke","zOpacity","fillColorValue","getStyleFromHsl","orbitOptions","orbit","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","drawOrbit","OrbitType","back","composite","shadow","front","type","start","end","PI","_d","drawEllipse","orbitColor","orbitRadius","orbitRotation","drawPlugin","drawParticlePlugin","background","elementStyle","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","toString","top","left","baseColor","connectOptions","interactivity","modes","connect","gradient","links"],"sources":["/Users/yujunyan/Desktop/my-website-master/node_modules/tsparticles/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            Utils_2.clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                Utils_2.clear(ctx, this.size);\n                this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                Utils_2.clear(ctx, this.size);\n            });\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n        const strokeOpacity = (_c = particle.stroke.opacity) !== null && _c !== void 0 ? _c : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        const orbitOptions = particle.options.orbit;\n        this.draw((ctx) => {\n            const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            if (radius <= 0) {\n                return;\n            }\n            if (orbitOptions.enable) {\n                this.drawOrbit(particle, Enums_1.OrbitType.back);\n            }\n            Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            if (orbitOptions.enable) {\n                this.drawOrbit(particle, Enums_1.OrbitType.front);\n            }\n        });\n    }\n    drawOrbit(particle, type) {\n        const container = this.container;\n        const orbitOptions = particle.options.orbit;\n        let start;\n        let end;\n        if (type === Enums_1.OrbitType.back) {\n            start = Math.PI / 2;\n            end = (Math.PI * 3) / 2;\n        }\n        else if (type === Enums_1.OrbitType.front) {\n            start = (Math.PI * 3) / 2;\n            end = Math.PI / 2;\n        }\n        else {\n            start = 0;\n            end = 2 * Math.PI;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            Utils_1.drawEllipse(ctx, particle, (_a = particle.orbitColor) !== null && _a !== void 0 ? _a : particle.getFillColor(), (_c = (_b = particle.orbitRadius) !== null && _b !== void 0 ? _b : container.retina.orbitRadius) !== null && _c !== void 0 ? _c : particle.getRadius(), orbitOptions.opacity, orbitOptions.width, ((_d = particle.orbitRotation) !== null && _d !== void 0 ? _d : 0) * container.retina.pixelRatio, start, end);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            Utils_1.drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            Utils_1.drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = Utils_1.colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = Utils_1.colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = Utils_1.deepExtend({}, element.style);\n            element.style.position = \"fixed\";\n            element.style.zIndex = options.fullScreen.zIndex.toString(10);\n            element.style.top = \"0\";\n            element.style.left = \"0\";\n            element.style.width = \"100%\";\n            element.style.height = \"100%\";\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            Utils_1.paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}